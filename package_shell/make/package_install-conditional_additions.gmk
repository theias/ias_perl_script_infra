install: \
	builddir \
	package_install_base_directories \
	package_install_conditional_additions \
	package_install_final_cleanup


package_install_base_directories:

	# META-Docs by default are added.

	mkdir -p $(ROOT_DIR)/$(BASE_DIR)
	chmod -R 755 $(ROOT_DIR)
	
	mkdir -p $(DOC_INST_DIR)
	chmod 775 $(DOC_BASE_DIR)
	cp $(PROJECT_NAME)/changelog $(DOC_INST_DIR)/
	cp $(PROJECT_NAME)/description $(DOC_INST_DIR)/
	cp README* $(DOC_INST_DIR)
	find $(DOC_INST_DIR) -type d | xargs chmod 755
	find $(DOC_INST_DIR) -type f | xargs chmod 644

	# Directories for FullProjectPath type apps:

	

	mkdir -p $(ROOT_DIR)/$(INPUT_DIR)
	chmod 664 $(ROOT_DIR)/$(INPUT_DIR)
	chmod 755 $(INPUT_BASE_DIR)
	
	mkdir -p $(ROOT_DIR)/$(OUTPUT_DIR)
	chmod 664 $(ROOT_DIR)/$(OUTPUT_DIR)
	chmod 755 $(OUTPUT_BASE_DIR)
	
	mkdir -p $(ROOT_DIR)/$(LOG_DIR)
	chmod 664 $(ROOT_DIR)/$(LOG_DIR)
	chmod 755 $(LOG_BASE_DIR)

# Conditional additions

package_install_conditional_additions: package_install_base_directories

ifneq ("$(wildcard $(SRC_DIR)/run_scripts/*)","")
	# Installing run scripts
	cp -r $(SRC_DIR)/run_scripts $(DOC_INST_DIR)/run_scripts
	find $(DOC_INST_DIR)/run_scripts -type d | xargs -r chmod 755
	find $(DOC_INST_DIR)/run_scripts -type f | xargs -r chmod 755
	
endif

ifneq ("$(wildcard $(PROJECT_DIR)/doc/*)","") 
	# Installing more documentation
	mkdir -p $(DOC_INST_DIR)
	cp -r $(PROJECT_DIR)/doc $(DOC_INST_DIR)/doc
	find $(DOC_INST_DIR) -type d | xargs -r chmod 755
	find $(DOC_INST_DIR) -type f | xargs -r chmod 644
endif

ifneq ("$(wildcard $(SRC_DIR)/bin/*)","") 
	# Installing binaries.
	mkdir -p $(ROOT_DIR)/$(BIN_DIR)
	cp -r $(SRC_DIR)/bin/* $(ROOT_DIR)/$(BIN_DIR)
	find $(BIN_INST_DIR) -type d | xargs -r chmod 755
	find $(BIN_INST_DIR) -type f | xargs -r chmod 755

endif

ifneq ("$(wildcard $(SRC_DIR)/cgi-bin/*)","") 
	# Installing CGI-BIN files
	mkdir -p $(ROOT_DIR)/$(CGI_BIN_DIR)
	-cp -r $(SRC_DIR)/cgi-bin/* $(ROOT_DIR)/$(CGI_BIN_DIR)
	-find $(CGI_BIN_INST_DIR) -type d | xargs -r chmod 755
	-find $(CGI_BIN_INST_DIR) -type f | xargs -r chmod 755
endif
	
ifneq ("$(wildcard $(SRC_DIR)/templates/*)","") 
	# Installing Templates
	mkdir -p $(TEMPLATE_INST_DIR)
	cp -r $(SRC_DIR)/templates $(TEMPLATE_INST_DIR)
	find $(TEMPLATE_INST_DIR) -type d | xargs -r chmod 755
	find $(TEMPLATE_INST_DIR) -type f | xargs -r chmod 644
endif

# lib
ifneq ("$(wildcard $(SRC_DIR)/lib/*)","")	
	# Installing libraries
	mkdir -p $(LIB_INST_DIR)
	cp -r $(SRC_DIR)/lib/* $(LIB_INST_DIR)
	find $(LIB_INST_DIR) -type d | xargs -r chmod 755
	find $(LIB_INST_DIR) -type f | xargs -r chmod 644
	
endif

ifneq ("$(wildcard $(SRC_DIR)/etc/*)","")
	# Installing project directory configuration
	mkdir -p $(ROOT_DIR)/$(CONF_DIR)
	cp -r $(SRC_DIR)/etc/* $(ROOT_DIR)/$(CONF_DIR)/
	find $(ROOT_DIR)/$(CONF_DIR)/ -type d | xargs -r chmod 755
	find $(ROOT_DIR)/$(CONF_DIR)/ -type f | xargs -r chmod 644
endif

ifneq ("$(wildcard $(SRC_DIR)/root_etc/*)","")
	# Installing things to /etc
	cp -r $(SRC_DIR)/root_etc $(ROOT_DIR)/etc
	find $(ROOT_DIR)/etc -type d | xargs -r chmod 755
	find $(ROOT_DIR)/etc -type f | xargs -r chmod 644
endif

package_install_final_cleanup:
	################
	# Some Final Cleanup	
	chmod -R a+r $(ROOT_DIR)
	-find $(ROOT_DIR) -type d |xargs chmod a+rx
	-find $(ROOT_DIR) -type d -name .svn | xargs -r rm -r
	
	################
	# An example of creating a file owned by
	# a non-root user (your system must have
	# fakeroot installed and working):
	# touch $(ROOT_DIR)/drop
	# chown somegroup:somegroup $(ROOT_DIR)/drop
